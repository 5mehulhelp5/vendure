/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root';
import { Route as LoginImport } from './routes/login';
import { Route as AboutImport } from './routes/about';
import { Route as AuthenticatedImport } from './routes/_authenticated';
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index';
import { Route as AuthenticatedProductsImport } from './routes/_authenticated/products';
import { Route as AuthenticatedDashboardImport } from './routes/_authenticated/dashboard';
import { Route as AuthenticatedProductsIdImport } from './routes/_authenticated/products_.$id';

// Create/Update Routes

const LoginRoute = LoginImport.update({
    id: '/login',
    path: '/login',
    getParentRoute: () => rootRoute,
} as any);

const AboutRoute = AboutImport.update({
    id: '/about',
    path: '/about',
    getParentRoute: () => rootRoute,
} as any);

const AuthenticatedRoute = AuthenticatedImport.update({
    id: '/_authenticated',
    getParentRoute: () => rootRoute,
} as any);

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedRoute,
} as any);

const AuthenticatedProductsRoute = AuthenticatedProductsImport.update({
    id: '/products',
    path: '/products',
    getParentRoute: () => AuthenticatedRoute,
} as any);

const AuthenticatedDashboardRoute = AuthenticatedDashboardImport.update({
    id: '/dashboard',
    path: '/dashboard',
    getParentRoute: () => AuthenticatedRoute,
} as any);

const AuthenticatedProductsIdRoute = AuthenticatedProductsIdImport.update({
    id: '/products_/$id',
    path: '/products/$id',
    getParentRoute: () => AuthenticatedRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
    interface FileRoutesByPath {
        '/_authenticated': {
            id: '/_authenticated';
            path: '';
            fullPath: '';
            preLoaderRoute: typeof AuthenticatedImport;
            parentRoute: typeof rootRoute;
        };
        '/about': {
            id: '/about';
            path: '/about';
            fullPath: '/about';
            preLoaderRoute: typeof AboutImport;
            parentRoute: typeof rootRoute;
        };
        '/login': {
            id: '/login';
            path: '/login';
            fullPath: '/login';
            preLoaderRoute: typeof LoginImport;
            parentRoute: typeof rootRoute;
        };
        '/_authenticated/dashboard': {
            id: '/_authenticated/dashboard';
            path: '/dashboard';
            fullPath: '/dashboard';
            preLoaderRoute: typeof AuthenticatedDashboardImport;
            parentRoute: typeof AuthenticatedImport;
        };
        '/_authenticated/products': {
            id: '/_authenticated/products';
            path: '/products';
            fullPath: '/products';
            preLoaderRoute: typeof AuthenticatedProductsImport;
            parentRoute: typeof AuthenticatedImport;
        };
        '/_authenticated/': {
            id: '/_authenticated/';
            path: '/';
            fullPath: '/';
            preLoaderRoute: typeof AuthenticatedIndexImport;
            parentRoute: typeof AuthenticatedImport;
        };
        '/_authenticated/products_/$id': {
            id: '/_authenticated/products_/$id';
            path: '/products/$id';
            fullPath: '/products/$id';
            preLoaderRoute: typeof AuthenticatedProductsIdImport;
            parentRoute: typeof AuthenticatedImport;
        };
    }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
    AuthenticatedDashboardRoute: typeof AuthenticatedDashboardRoute;
    AuthenticatedProductsRoute: typeof AuthenticatedProductsRoute;
    AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute;
    AuthenticatedProductsIdRoute: typeof AuthenticatedProductsIdRoute;
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
    AuthenticatedDashboardRoute: AuthenticatedDashboardRoute,
    AuthenticatedProductsRoute: AuthenticatedProductsRoute,
    AuthenticatedIndexRoute: AuthenticatedIndexRoute,
    AuthenticatedProductsIdRoute: AuthenticatedProductsIdRoute,
};

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(AuthenticatedRouteChildren);

export interface FileRoutesByFullPath {
    '': typeof AuthenticatedRouteWithChildren;
    '/about': typeof AboutRoute;
    '/login': typeof LoginRoute;
    '/dashboard': typeof AuthenticatedDashboardRoute;
    '/products': typeof AuthenticatedProductsRoute;
    '/': typeof AuthenticatedIndexRoute;
    '/products/$id': typeof AuthenticatedProductsIdRoute;
}

export interface FileRoutesByTo {
    '/about': typeof AboutRoute;
    '/login': typeof LoginRoute;
    '/dashboard': typeof AuthenticatedDashboardRoute;
    '/products': typeof AuthenticatedProductsRoute;
    '/': typeof AuthenticatedIndexRoute;
    '/products/$id': typeof AuthenticatedProductsIdRoute;
}

export interface FileRoutesById {
    __root__: typeof rootRoute;
    '/_authenticated': typeof AuthenticatedRouteWithChildren;
    '/about': typeof AboutRoute;
    '/login': typeof LoginRoute;
    '/_authenticated/dashboard': typeof AuthenticatedDashboardRoute;
    '/_authenticated/products': typeof AuthenticatedProductsRoute;
    '/_authenticated/': typeof AuthenticatedIndexRoute;
    '/_authenticated/products_/$id': typeof AuthenticatedProductsIdRoute;
}

export interface FileRouteTypes {
    fileRoutesByFullPath: FileRoutesByFullPath;
    fullPaths: '' | '/about' | '/login' | '/dashboard' | '/products' | '/' | '/products/$id';
    fileRoutesByTo: FileRoutesByTo;
    to: '/about' | '/login' | '/dashboard' | '/products' | '/' | '/products/$id';
    id:
        | '__root__'
        | '/_authenticated'
        | '/about'
        | '/login'
        | '/_authenticated/dashboard'
        | '/_authenticated/products'
        | '/_authenticated/'
        | '/_authenticated/products_/$id';
    fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
    AuthenticatedRoute: typeof AuthenticatedRouteWithChildren;
    AboutRoute: typeof AboutRoute;
    LoginRoute: typeof LoginRoute;
}

const rootRouteChildren: RootRouteChildren = {
    AuthenticatedRoute: AuthenticatedRouteWithChildren,
    AboutRoute: AboutRoute,
    LoginRoute: LoginRoute,
};

export const routeTree = rootRoute._addFileChildren(rootRouteChildren)._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/about",
        "/login"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/dashboard",
        "/_authenticated/products",
        "/_authenticated/",
        "/_authenticated/products_/$id"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_authenticated/dashboard": {
      "filePath": "_authenticated/dashboard.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/products": {
      "filePath": "_authenticated/products.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/products_/$id": {
      "filePath": "_authenticated/products_.$id.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
